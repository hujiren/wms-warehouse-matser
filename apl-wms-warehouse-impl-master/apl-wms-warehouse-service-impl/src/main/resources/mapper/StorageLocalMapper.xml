<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.apl.wms.warehouse.dao.StorageLocalMapper">

    <!-- 查找详情 2019-12-17-->
    <select id="getStorageLocalBySn" resultType="com.apl.wms.warehouse.lib.pojo.vo.StorageLocalInfoVo">
        SELECT
            sl.id,
            concat(wz.zone_name , "/" , ws.shelves_no , "/" , sl.storage_local_sn) as storageLocalName,
            sl.storage_local_sn,
            sl.shelves_id,
            sl.storage_status,
            sl.volume,
            sl.is_lock
        FROM
            storage_local sl
            left JOIN wh_shelves ws ON sl.shelves_id = ws.id
            left JOIN wh_zone wz ON ws.wh_zone_id = wz.id
        WHERE
            sl.storage_local_sn = #{storageLocalSn}
    </select>

    <!-- 查找列表 2019-12-17-->
    <select id="getList" resultType="com.apl.wms.warehouse.vo.StorageLocalListVo">
        SELECT
           id,
           storage_layer,
           storage_local_sn,
           size_length, 
           size_width, 
           size_height, 
           support_weight, 
           remark,
           shelves_id
        FROM
           storage_local
        where
        shelves_id = #{kd.shelvesId}
        <if test="kd.storageLayer != null and kd.storageLayer>0">
            and storage_layer = #{kd.storageLayer}
        </if>
        <if test="kd.keyword != null and kd.keyword.length>0">
            and (storage_local_sn=#{kd.keyword} or locate(#{kd.keyword}, remark)>0)
        </if>
    </select>

    <!-- 检查记录是否重复 -->
    <select id="exists" resultType="com.apl.wms.warehouse.lib.pojo.vo.StorageLocalInfoVo">
        SELECT
           id,
           storage_local_sn
        FROM
           storage_local
        WHERE
           storage_local_sn = #{storageLocalSn}
        <if test="id != null and id>0">
            AND id !=  #{id}
        </if>
    </select>


    <!-- 检查记录是否重复 -->
    <select id="getPrintData" resultType="com.apl.wms.warehouse.lib.pojo.bo.StorageLocationBo">
        SELECT
            storage_local_sn,
           remark
        FROM
           storage_local
        WHERE
        id in
        <foreach collection="ids" open="(" separator="," close=")" item="storageId">
            #{storageId}
        </foreach>

    </select>

    <!-- 获取未满的库位-->
    <select id="getUnFullStorageLocal" resultType="com.apl.wms.warehouse.lib.pojo.vo.StorageLocalInfoVo">
        SELECT
            sl.id as storageLocalId,
            sl.volume,
            sl.available_count,
            concat(wz.zone_name , "/" , ws.shelves_no , "/" , sl.storage_local_sn) as storageLocalName
        FROM
            storage_local sl
            left join wh_shelves ws on sl.shelves_id = ws.id
            left join wh_zone wz on ws.wh_zone_id = wz.id
        WHERE
            sl.storage_status = 2
            AND sls.commodity_id = #{commodityId}

            <!--
            SELECT
            sl.id as storageLocalId,
            sl.volume,
            sl.stock_count,
            concat(wz.zone_name , "/" , ws.shelves_no , "/" , sl.storage_local_sn) as storageLocalName
        FROM
            storage_local_stocks sls
            LEFT JOIN storage_local sl ON sls.storage_local_id = sl.id
            left join wh_shelves ws on sl.shelves_id = ws.id
            left join wh_zone wz on ws.wh_zone_id = wz.id
        WHERE
            sl.storage_status = 2
            AND sls.commodity_id = #{commodityId}
            -->
    </select>

    <!-- 获取空的库位-->
    <select id="getNullStorageLocal" resultType="com.apl.wms.warehouse.lib.pojo.vo.StorageLocalInfoVo">
        SELECT
            sl.id ,
            sl.volume,
            sl.storage_local_sn,
            concat(wz.zone_name , "/" , ws.shelves_no , "/" , sl.storage_local_sn) as storageLocalName
        FROM
            storage_local sl
            left join wh_shelves ws on sl.shelves_id = ws.id
            left join wh_zone wz on ws.wh_zone_id = wz.id
        where sl.storage_status = 1 and sl.is_lock = 0 limit 0 , #{count}
    </select>


    <update id="batchUpdateStorageStatus">
        update storage_local set storage_status = #{status} where id in (${storageIds})
    </update>


    <update id="changeStorageLocalStatus">
        update storage_local set is_lock = #{localStatus}
        where id in ( ${storageLocalIds})

    </update>


</mapper>
